# -- Default number of instances to start 
replicaCount: 1
# -- Application name
name: mediator
# -- Ovverwrites application name
nameOverride: ""

image:
  repository: registry.gitlab.com/gaia-x
  # -- Image name
  name: data-infrastructure-federation-services/ocm/infrastructure
  # -- Image tag
  # Uses .Chart.AppVersion if empty
  tag: ""
  # -- Image sha, usually generated by the CI
  # Uses image.tag if empty
  sha: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image pull secret when internal image is used
  pullSecrets: deployment-key-light


podAnnotations: {}
##
## Pass extra environment variables to the container.
##
# extraVars:
# - name: EXTRA_VAR_1
#   value: extra-var-value-1
# - name: EXTRA_VAR_2
#   value: extra-var-value-2
##
## Create new service when true, and use the specified uner name when set to the name specified
##

##
## Configure pod autoscaling
##

autoscaling:
  # -- Enable autoscaling
  enabled: false
  # -- Minimum replicas
  minReplicas: 1
  # -- Maximum replicas
  maxReplicas: 3
  # -- CPU target for autoscaling trigger
  targetCPUUtilizationPercentage: 70
  # -- Memory target for autoscaling trigger
  targetMemoryUtilizationPercentage: 70
##
## Prometheus Exporter / Metrics
##

metrics:
  # -- Enable prometheus metrics
  enabled: true
  # -- Port for prometheus metrics
  port: 2112

##
## Kubernetes [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) object.
##

security:
  # -- by default, apps run as non-root
  runAsNonRoot: false
  # -- User used by the apps
  runAsUid: 0
  # -- Group used by the apps
  runAsGid: 0
##
##

service:
  httpin_port: 3000
  wsin_port: 3001
  httpadmin_port: 3002
  mediator_port: 3010

postgres:
  superUser:
    usernameSecret:
      name: ocm-postgres-superuser
      key: username
    passwordSecret:
      name: ocm-postgres-superuser
      key: password
  database: ocm-mediator
  username: ocm-mediator
  schema: DatabasePerWallet
  host:
    name: ocm-postgres-rw.ocm.svc.cluster.local
    port: 5432


mediator:
  controller:
    apy_key: "xei2QavYTUaOmeI4FOudvQXpALhDGoCA"
    webhook: http://mediator:3010/webhooks
  agent:
    key: ""
    label: Gaiax-Mediator
    http_in_port: 3000
    ws_in_port: 3001
    http_admin_port: 3002
  admin: 
    key: "Hxly1uuBXSWjSERoEkuD2amIWn7KBWxE"
    mode: "admin-api-key 7gdmVBiJalMj52Oum50yD8neu/nxmv3/DTWcZPyKZ4K2UdNNwSPKgg=="
  alias: MOON
  log:
    level: DEBUG
  endpoint:
    url: https://integration.gxfs.dev/mediator
  env: local
  postgre:
    host: ""
    port: 5432
  wallet:
    storage:
      config: ""
      creds: ""
    name: mediator
    key: testing
  arg_file: ./configs/mediator-auto-accept.yml

ingress:
  enabled: true
  tlsEnabled: true
  frontendDomain: integration.gxfs.dev
  frontendTlsSecretName: argocd-wildcard
